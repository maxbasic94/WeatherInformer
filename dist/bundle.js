(()=>{"use strict";var e={653:(e,t,n)=>{e.exports=n.p+"../images/barometer.png"}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,n),a.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e=n(653);let t=document.createElement("img");t.src=e,console.log(t),async function(e){const t=await fetch("http://api.weatherapi.com/v1/forecast.json?key=0ca217e793694cf3b27105654211511&q=Minsk&days=4&aqi=no&alerts=no");if(200==t.status)return await t.json();throw new Error(t.status)}().then((t=>function(t){const{location:n,current:s,forecast:r}=t,a=document.createElement("div");a.className="informer";const i=function(e,t){const n=document.createElement("div");return n.className="currentInfo",n.innerHTML=`\n        <div class="city">${e.name}</div>\n        <div class="currentTemp">${t.temp_c}°<img src="https:${t.condition.icon}"></div>\n        <div class="currentCondition">${t.condition.text}</div>`,n}(n,s),c=function(t){const n=document.createElement("div");return n.className="humPresSpeed",n.innerHTML=`\n    <div class="humidity"><img сlass='imgHumPresSpeed' src="${e}" height="30px" width="30px">${t.humidity} %</div>\n    <div class="pressure"><img сlass='imgHumPresSpeed' src="../images/barometer.png" height="30px" width="30px">${t.pressure_mb} mBar</div>\n    <div class="windSpeed"><img сlass='imgHumPresSpeed' src="../images/windSpeed.png" height="30px" width="30px">${t.wind_kph} km/h</div>`,n}(s),o=function(e){const t=document.createElement("div");return t.className="sun",t.innerHTML=`\n    <div class="sunrise"><img class="sunrise" src="../images/sunrise.png" height="30px" width="30px">${e.forecastday[0].astro.sunrise}</div>\n    <div class="sunset">${e.forecastday[0].astro.sunset}<img class="sunset" src="../images/sunset.png" height="30px" width="30px"></div>`,t}(r),d=function(e,t){const n=document.createElement("div"),s=document.createElement("div"),r=t.last_updated.slice(-5).split(":")[0],a=e.forecastday[0].hour.slice(r).concat(e.forecastday[1].hour).splice(1,24);return s.className="dayForecast",n.className="today",n.innerHTML='<div class="caption">Today</div>',a.forEach((e=>s.append(function(e){const t=document.createElement("div");return t.className="timeGroup",t.innerHTML=`\n    <div class="time">${e.time.substr(-5)}</div>\n    <div class="icon"><img src="https:${e.condition.icon}"></div>\n    <div class="time">${e.temp_c}°</div>`,t}(e)))),n.append(s),n}(r,s),u=function(e){const t=document.createElement("div");return t.className="nextDays",e.forecastday.slice(1).forEach((e=>t.append(function(e){const t=function(e){switch(e){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday";default:Error("error getting week day")}}(new Date(e.date).getDay()),n=document.createElement("div");return n.className="nextDay",n.innerHTML=`\n    <div class="nameNextDay">${t}</div>\n    <div class="iconNextDay"><img src="https:${e.day.condition.icon}"></div>\n    <div class="maxTempNextDay">${e.day.maxtemp_c}°</div>\n    <div class="minTempNextDay">${e.day.mintemp_c}°</div>`,n}(e)))),t}(r);a.append(i),a.append(c),a.append(o),a.append(d),a.append(u),console.log(n),console.log(s),console.log(r),document.querySelector(".app").prepend(a),document.querySelector(".dayForecast").addEventListener("mousewheel",(e=>{e=window.event||e;var t=Math.max(-1,Math.min(1,e.wheelDelta||-e.detail));document.querySelector(".dayForecast").scrollLeft-=40*t,e.preventDefault()}),!1)}(t))).catch(alert)})()})();